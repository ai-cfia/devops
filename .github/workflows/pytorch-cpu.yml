name: Build and Push PyTorch CPU Docker Image
on:
  workflow_dispatch:
    inputs:
      image:
        required: true
        description: Image to build
        type: choice
        options:
          - pytorch-cpu
      tag:
        required: true
        description: Version to tag the image
jobs:
  build:
    permissions:
      contents: read
      packages: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2

      - name: Log in to the github container registry (GCR)
        uses: docker/login-action@7ca345011ac4304463197fac0e56eab1bc7e6af0
        with:
          registry: ghcr.io/ai-cfia
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx

      - name: Extract branch name + remove undesired characters
        shell: bash
        id: extract_branch_name
        run: |
          BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          CLEAN_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/[\/\\]/-/g')
          echo "clean_branch_name=$CLEAN_BRANCH_NAME" >> $GITHUB_ENV
          echo "::set-output name=clean_branch_name::$CLEAN_BRANCH_NAME"

      - name: Build with secret
        id: docker_build_and_tag_merged
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1
        with:
          context: ./dockerfiles/${{ github.event.inputs.image }}
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/ai-cfia/${{ github.event.inputs.image }}:${{ github.event.inputs.tag }}
            ghcr.io/ai-cfia/${{ github.event.inputs.image }}:${{ steps.extract_branch_name.outputs.clean_branch_name || 'latest' }}
          secrets: |
            "user_password=${{ secrets.JUPYTER_SSH_PASSWORD }}"
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Refresh Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
