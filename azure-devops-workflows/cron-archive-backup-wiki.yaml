trigger: none
pr: none

schedules:
  - cron: '0 6 * * 1'
    displayName: Sync wiki every Monday at 6h00 UTC (1h00 EST)
    branches:
      include:
        - main
    always: true

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: wiki-export

stages:
  - stage: SyncWiki
    displayName: "Synchronize Azure DevOps wiki to GitHub repository"
    jobs:
      - job: SyncWikiJob
        displayName: "Clone wiki and push to GitHub repository"
        steps:
          - task: Bash@3
            displayName: "Configure Git"
            inputs:
              targetType: "inline"
              script: |
                git config --global user.name "Azure DevOps Wiki Sync"
                git config --global user.email "devops@cfia-acia.gc.ca"
                git config --global core.longpaths true

          - task: Bash@3
            displayName: "Clone Azure DevOps wiki"
            inputs:
              targetType: "inline"
              script: |
                git clone https://$(username):$(pat)@dev.azure.com/CFIA-DevOps-ACIA/AI-Lab/_git/AI-Lab.wiki ./wiki
                echo "Wiki cloned successfully"

          - task: Bash@3
            displayName: "Clone target GitHub repository"
            inputs:
              targetType: "inline"
              script: |
                git clone https://$(githubToken)@github.com/ai-cfia/$(targetRepo).git ./target-repo
                echo "Target repository cloned successfully"

          - task: Bash@3
            displayName: "Sync wiki content to GitHub repository"
            inputs:
              targetType: "inline"
              script: |
                # Clear existing content and replace with new wiki content
                rm -rf ./target-repo/*
                cp -r ./wiki/AI-Lab-Wiki-HomePage/* ./target-repo/
                cp ./wiki/AI-Lab-Wiki-HomePage.md ./target-repo/
                
                mv ./target-repo/AI-Lab-Wiki-HomePage.md README.md
                
                # Decode URL encoding using python for all files
                cd ./target-repo
                find . -type f | while read file; do
                  newname=$(python3 -c "import urllib.parse; print(urllib.parse.unquote('$(basename "$file")'))")
                  newpath="$(dirname "$file")/$newname"
                  if [ "$file" != "$newpath" ]; then
                    mv "$file" "$newpath"
                    echo "Renamed: $file -> $newpath"
                  fi
                done
                
                echo "Wiki content synchronized - all existing files replaced and filenames decoded"

          - task: Bash@3
            displayName: "Commit and push to GitHub"
            inputs:
              targetType: "inline"
              script: |
                cd ./target-repo
                git add .
                
                if ! git diff --staged --quiet; then
                  git commit -m "Automated wiki (latest) backup - $(date '+%Y-%m-%d %H:%M:%S UTC')"
                  git push origin main
                  echo "Changes committed and pushed successfully"
                else
                  echo "No changes detected, skipping commit"
                fi
